/*
 * This file is part of the coreboot project.
 *
 * Copyright 2015 MediaTek Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 */

#ifndef _DDP_REG_H_
#define _DDP_REG_H_

/* display base address */
enum {
	DISPSYS_CONFIG_BASE	= 0x14000000,
	DISPSYS_OVL0_BASE	= 0x1400C000,
	DISPSYS_OVL1_BASE	= 0,
	DISPSYS_RDMA0_BASE	= 0x1400E000,
	DISPSYS_RDMA1_BASE	= 0,
	DISPSYS_RDMA2_BASE	= 0,
	DISPSYS_WDMA0_BASE	= 0,
	DISPSYS_WDMA1_BASE	= 0,
	DISPSYS_COLOR0_BASE	= 0x14013000,
	DISPSYS_COLOR1_BASE	= 0,
	DISPSYS_AAL_BASE	= 0x14015000,
	DISPSYS_GAMMA_BASE	= 0,
	DISPSYS_MERGE_BASE	= 0,
	DISPSYS_SPLIT0_BASE	= 0,
	DISPSYS_SPLIT1_BASE	= 0,
	DISPSYS_UFOE_BASE	= 0x1401A000,
	DISPSYS_DSI0_BASE	= 0x1401B000,
	DISPSYS_DSI1_BASE	= 0,
	DISPSYS_DPI0_BASE	= 0,
	DISPSYS_DPI1_BASE	= 0,
	DISPSYS_PWM0_BASE	= 0,
	DISPSYS_PWM1_BASE	= 0,
	DISPSYS_MUTEX_BASE	= 0x14020000,
	DISPSYS_SMI_LARB0_BASE	= 0,
	DISPSYS_SMI_COMMON_BASE	= 0,
	DISPSYS_OD_BASE		= 0x14023000,
	MIPITX0_BASE		= 0,
	MIPITX1_BASE		= 0,
	DISPSYS_CONFIG2_BASE	= 0,
	DISPSYS_CONFIG3_BASE	= 0,
	DISPSYS_IO_DRIVING	= 0
};

enum {
	DSI_ANA_BASE = 0x10215000
};

/* Config */
enum {
	DISP_REG_CONFIG_MMSYS_INTEN =  0x0,
	DISP_REG_CONFIG_MMSYS_INTSTA = 0x4,
	DISP_REG_CONFIG_MJC_APB_TX_CON = 0x8,
	DISP_REG_CONFIG_PWM_APB_ERR_ADDR = 0xc,
	DISP_REG_CONFIG_ISP_MOUT_EN = 0x01c,
	DISP_REG_CONFIG_MDP_RDMA0_MOUT_EN = 0x020,
	DISP_REG_CONFIG_MDP_PRZ0_MOUT_EN = 0x024,
	DISP_REG_CONFIG_MDP_PRZ1_MOUT_EN = 0x028,
	DISP_REG_CONFIG_MDP_PRZ2_MOUT_EN = 0x02C,
	DISP_REG_CONFIG_MDP_TDSHP0_MOUT_EN = 0x030,
	DISP_REG_CONFIG_MDP_TDSHP1_MOUT_EN = 0x034,
	DISP_REG_CONFIG_MDP0_MOUT_EN = 0x038,
	DISP_REG_CONFIG_MDP1_MOUT_EN = 0x03C,
	DISP_REG_CONFIG_DISP_OVL0_MOUT_EN = 0x040,
	DISP_REG_CONFIG_DISP_OVL1_MOUT_EN = 0x044,
	DISP_REG_CONFIG_DISP_OD_MOUT_EN	 = 0x048,
	DISP_REG_CONFIG_DISP_GAMMA_MOUT_EN = 0x04C,
	DISP_REG_CONFIG_DISP_UFOE_MOUT_EN = 0x050,
	DISP_REG_CONFIG_MMSYS_MOUT_RST = 0x054,
	DISP_REG_CONFIG_MDP_PRZ0_SEL_IN	= 0x058,
	DISP_REG_CONFIG_MDP_PRZ1_SEL_IN	= 0x05C,
	DISP_REG_CONFIG_MDP_PRZ2_SEL_IN	= 0x060,
	DISP_REG_CONFIG_MDP_TDSHP0_SEL_IN = 0x064,
	DISP_REG_CONFIG_MDP_TDSHP1_SEL_IN = 0x068,
	DISP_REG_CONFIG_MDP0_SEL_IN = 0x06C,
	DISP_REG_CONFIG_MDP1_SEL_IN = 0x070,
	DISP_REG_CONFIG_MDP_CROP_SEL_IN = 0x074,
	DISP_REG_CONFIG_MDP_WDMA_SEL_IN = 0x078,
	DISP_REG_CONFIG_MDP_WROT0_SEL_IN = 0x07C,
	DISP_REG_CONFIG_MDP_WROT1_SEL_IN = 0x080,
	DISP_REG_CONFIG_DISP_COLOR0_SEL_IN = 0x084,
	DISP_REG_CONFIG_DISP_COLOR1_SEL_IN = 0x088,
	DISP_REG_CONFIG_DISP_AAL_SEL_IN	= 0x08C,
	DISP_REG_CONFIG_DISP_PATH0_SEL_IN = 0x090,
	DISP_REG_CONFIG_DISP_PATH1_SEL_IN = 0x094,
	DISP_REG_CONFIG_DISP_WDMA0_SEL_IN = 0x098,
	DISP_REG_CONFIG_DISP_WDMA1_SEL_IN = 0x09C,
	DISP_REG_CONFIG_DISP_UFOE_SEL_IN = 0x0A0,
	DISP_REG_CONFIG_DSI0_SEL_IN = 0x0A4,
	DISP_REG_CONFIG_DSI1_SEL_IN = 0x0A8,
	DISP_REG_CONFIG_DPI_SEL_IN = 0x0AC,
	DISP_REG_CONFIG_DISP_RDMA0_SOUT_SEL_IN = 0x0B0,
	DISP_REG_CONFIG_DISP_RDMA1_SOUT_SEL_IN = 0x0B4,
	DISP_REG_CONFIG_DISP_RDMA2_SOUT_SEL_IN = 0x0B8,
	DISP_REG_CONFIG_DISP_COLOR0_SOUT_SEL_IN = 0x0BC,
	DISP_REG_CONFIG_DISP_COLOR1_SOUT_SEL_IN	= 0x0C0,
	DISP_REG_CONFIG_DISP_PATH0_SOUT_SEL_IN = 0x0C4,
	DISP_REG_CONFIG_DISP_PATH1_SOUT_SEL_IN = 0x0C8,
	DISP_REG_CONFIG_MMSYS_MISC = 0x0F0,
	DISP_REG_CONFIG_MMSYS_CG_CON0 =	0x100,
	DISP_REG_CONFIG_MMSYS_CG_SET0 =	0x104,
	DISP_REG_CONFIG_MMSYS_CG_CLR0 = 0x108,
	DISP_REG_CONFIG_MMSYS_CG_CON1 =	0x110,
	DISP_REG_CONFIG_MMSYS_CG_SET1 = 0x114,
	DISP_REG_CONFIG_MMSYS_CG_CLR1 = 0x118,
	DISP_REG_CONFIG_MMSYS_HW_DCM_DIS0 = 0x120,
	DISP_REG_CONFIG_MMSYS_HW_DCM_DIS_SET0 = 0x124,
	DISP_REG_CONFIG_MMSYS_HW_DCM_DIS_CLR0 = 0x128,
	DISP_REG_CONFIG_MMSYS_HW_DCM_DIS1 = 0x130,
	DISP_REG_CONFIG_MMSYS_HW_DCM_DIS_SET1 = 0x134,
	DISP_REG_CONFIG_MMSYS_HW_DCM_DIS_CLR1 =	0x138,
	DISP_REG_CONFIG_MMSYS_SW0_RST_B	= 0x140,
	DISP_REG_CONFIG_MMSYS_SW1_RST_B	= 0x144,
	DISP_REG_CONFIG_MMSYS_LCM_RST_B	= 0x150,
	DISP_REG_CONFIG_SMI_N21MUX_CFG_WR = 0x168,
	DISP_REG_CONFIG_SMI_N21MUX_CFG_RD = 0x16c,
	DISP_REG_CONFIG_ELA2GMC_BASE_ADDR = 0x170,
	DISP_REG_CONFIG_ELA2GMC_BASE_ADDR_END = 0x174,
	DISP_REG_CONFIG_ELA2GMC_FINAL_ADDR = 0x178,
	DISP_REG_CONFIG_ELA2GMC_STATUS = 0x17c,
	DISP_REG_CONFIG_DISP_FAKE_ENG_EN = 0x200,
	DISP_REG_CONFIG_DISP_FAKE_ENG_RST = 0x204,
	DISP_REG_CONFIG_DISP_FAKE_ENG_CON0 = 0x208,
	DISP_REG_CONFIG_DISP_FAKE_ENG_CON1 = 0x20c,
	DISP_REG_CONFIG_DISP_FAKE_ENG_RD_ADDR = 0x210,
	DISP_REG_CONFIG_DISP_FAKE_ENG_WR_ADDR = 0x214,
	DISP_REG_CONFIG_DISP_FAKE_ENG_STATE = 0x218,
	DISP_REG_CONFIG_MMSYS_MBIST_CON = 0x800,
	DISP_REG_CONFIG_MMSYS_MBIST_DONE = 0x804,
	DISP_REG_CONFIG_MMSYS_MBIST_HOLDB = 0x808,
	DISP_REG_CONFIG_MMSYS_MBIST_MODE = 0x80c,
	DISP_REG_CONFIG_MMSYS_MBIST_FAIL0 = 0x810,
	DISP_REG_CONFIG_MMSYS_MBIST_FAIL1 = 0x814,
	DISP_REG_CONFIG_MMSYS_MBIST_FAIL2 = 0x818,
	DISP_REG_CONFIG_MMSYS_MBIST_BSEL0 = 0x820,
	DISP_REG_CONFIG_MMSYS_MBIST_BSEL1 = 0x824,
	DISP_REG_CONFIG_MMSYS_MBIST_BSEL2 = 0x828,
	DISP_REG_CONFIG_MMSYS_MBIST_BSEL3 = 0x82c,
	DISP_REG_CONFIG_MMSYS_MEM_DELSEL0 = 0x830,
	DISP_REG_CONFIG_MMSYS_MEM_DELSEL1 = 0x834,
	DISP_REG_CONFIG_MMSYS_MEM_DELSEL2 = 0x838,
	DISP_REG_CONFIG_MMSYS_MEM_DELSEL3 = 0x83c,
	DISP_REG_CONFIG_MMSYS_MEM_DELSEL4 = 0x840,
	DISP_REG_CONFIG_MMSYS_MEM_DELSEL5 = 0x844,
	DISP_REG_CONFIG_MMSYS_DEBUG_OUT_SEL = 0x880,
	DISP_REG_CONFIG_MMSYS_DUMMY = 0x890,
	DISP_REG_CONFIG_MMSYS_MBIST_RP_RST_B = 0x8a0,
	DISP_REG_CONFIG_MMSYS_MBIST_RP_FAIL = 0x8a4,
	DISP_REG_CONFIG_MMSYS_MBIST_RP_OK = 0x8a8,
	DISP_REG_CONFIG_DISP_DL_VALID_0 = 0x8b0,
	DISP_REG_CONFIG_DISP_DL_VALID_1	= 0x8b4,
	DISP_REG_CONFIG_DISP_DL_READY_0	= 0x8b8,
	DISP_REG_CONFIG_DISP_DL_READY_1	= 0x8bc,
	DISP_REG_CONFIG_MDP_DL_VALID_0	= 0x8c0,
	DISP_REG_CONFIG_MDP_DL_VALID_1	= 0x8c4,
	DISP_REG_CONFIG_MDP_DL_READY_0	= 0x8c8,
	DISP_REG_CONFIG_MDP_DL_READY_1	= 0x8cc,
	DISP_REG_CONFIG_SMI_LARB0_GREQ	= 0x8d0
};

/* DISP_REG_CONFIG_MMSYS_CG_CON0
   Configures free-run clock gating 0
	0: Enable clock
	1: Clock gating  */
enum {
	CG_CON0_SMI_COMMON  = (1UL << (0)),
	CG_CON0_SMI_LARB0   = (1UL << (1)),
	CG_CON0_CAM_MDP     = (1UL << (2)),
	CG_CON0_MDP_RDMA0   = (1UL << (3)),
	CG_CON0_MDP_RDMA1   = (1UL << (4)),
	CG_CON0_MDP_RSZ0    = (1UL << (5)),
	CG_CON0_MDP_RSZ1    = (1UL << (6)),
	CG_CON0_MDP_RSZ2    = (1UL << (7)),
	CG_CON0_MDP_TDSHP0  = (1UL << (8)),
	CG_CON0_MDP_TDSHP1  = (1UL << (9)),
	CG_CON0_MDP_CROP    = (1UL << (10)),
	CG_CON0_MDP_WDMA    = (1UL << (11)),
	CG_CON0_MDP_WROT0   = (1UL << (12)),
	CG_CON0_MDP_WROT1   = (1UL << (13)),
	CG_CON0_FAKE_ENG    = (1UL << (14)),
	CG_CON0_MUTEX_32K   = (1UL << (15)),
	CG_CON0_DISP_OVL0   = (1UL << (16)),
	CG_CON0_DISP_OVL1   = (1UL << (17)),
	CG_CON0_DISP_RDMA0  = (1UL << (18)),
	CG_CON0_DISP_RDMA1  = (1UL << (19)),
	CG_CON0_DISP_RDMA2  = (1UL << (20)),
	CG_CON0_DISP_WDMA0  = (1UL << (21)),
	CG_CON0_DISP_WDMA1  = (1UL << (22)),
	CG_CON0_DISP_COLOR0 = (1UL << (23)),
	CG_CON0_DISP_COLOR1 = (1UL << (24)),
	CG_CON0_DISP_AAL    = (1UL << (25)),
	CG_CON0_DISP_GAMMA  = (1UL << (26)),
	CG_CON0_DISP_UFOE   = (1UL << (27)),
	CG_CON0_DISP_SPLIT0 = (1UL << (28)),
	CG_CON0_DISP_SPLIT1 = (1UL << (29)),
	CG_CON0_DISP_MERGE  = (1UL << (30)),
	CG_CON0_DISP_OD     = (1UL << (31)),
	CG_CON0_ALL	    = 0xffffffff
};

/* DISP_REG_CONFIG_MMSYS_CG_CON1
   Configures free-run clock gating 1
	0: Enable clock
	1: Clock gating */
enum {
	CG_CON1_DISP_PWM0_MM  = (1UL << (0)),
	CG_CON1_DISP_PWM0_26M = (1UL << (1)),
	CG_CON1_DISP_PWM1_MM  = (1UL << (2)),
	CG_CON1_DISP_PWM1_26M = (1UL << (3)),
	CG_CON1_DSI0_ENGINE   = (1UL << (4)),
	CG_CON1_DSI0_DIGITAL  = (1UL << (5)),
	CG_CON1_DSI1_ENGINE   = (1UL << (6)),
	CG_CON1_DSI1_DIGITAL  = (1UL << (7)),
	CG_CON1_DPI_PIXEL     = (1UL << (8)),
	CG_CON1_DPI_ENGINE    = (1UL << (9)),

	CG_CON1_ALL	      = 0xffffffff
};

enum {
	DDP_MUTEX_INTR_ENABLE_BIT = 0x3cf
};

enum {
	DISP_REG_CONFIG_MUTEX_INTEN      = 0x0,
	DISP_REG_CONFIG_MUTEX_INTSTA     = 0x4,
	DISP_REG_CONFIG_REG_UPD_TIMEOUT  = 0x8,
	DISP_REG_CONFIG_REG_COMMIT       = 0xC,
	DISP_REG_CONFIG_MUTEX0_EN        = 0x20,
	DISP_REG_CONFIG_MUTEX0           = 0x24,
	DISP_REG_CONFIG_MUTEX0_RST       = 0x28,
	DISP_REG_CONFIG_MUTEX0_MOD       = 0x2C,
	DISP_REG_CONFIG_MUTEX0_SOF       = 0x30,
	DISP_REG_CONFIG_MUTEX1_EN        = 0x40,
	DISP_REG_CONFIG_MUTEX1           = 0x44,
	DISP_REG_CONFIG_MUTEX1_RST       = 0x48,
	DISP_REG_CONFIG_MUTEX1_MOD       = 0x4C,
	DISP_REG_CONFIG_MUTEX1_SOF       = 0x50,
	DISP_REG_CONFIG_MUTEX2_EN        = 0x60,
	DISP_REG_CONFIG_MUTEX2           = 0x64,
	DISP_REG_CONFIG_MUTEX2_RST       = 0x68,
	DISP_REG_CONFIG_MUTEX2_MOD       = 0x6C,
	DISP_REG_CONFIG_MUTEX2_SOF       = 0x70,
	DISP_REG_CONFIG_MUTEX3_EN        = 0x80,
	DISP_REG_CONFIG_MUTEX3           = 0x84,
	DISP_REG_CONFIG_MUTEX3_RST       = 0x88,
	DISP_REG_CONFIG_MUTEX3_MOD       = 0x8C,
	DISP_REG_CONFIG_MUTEX3_SOF       = 0x90,
	DISP_REG_CONFIG_MUTEX4_EN        = 0xA0,
	DISP_REG_CONFIG_MUTEX4           = 0xA4,
	DISP_REG_CONFIG_MUTEX4_RST       = 0xA8,
	DISP_REG_CONFIG_MUTEX4_MOD       = 0xAC,
	DISP_REG_CONFIG_MUTEX4_SOF       = 0xB0,
	DISP_REG_CONFIG_MUTEX5_EN        = 0xC0,
	DISP_REG_CONFIG_MUTEX5           = 0xC4,
	DISP_REG_CONFIG_MUTEX5_RST       = 0xC8,
	DISP_REG_CONFIG_MUTEX5_MOD       = 0xCC,
	DISP_REG_CONFIG_MUTEX5_SOF       = 0xD0,
	DISP_REG_CONFIG_MUTEX_DEBUG_OUT_SEL = 0x100,
};

static inline u32 DISP_REG_CONFIG_MUTEX_EN(int n)
{
	return DISP_REG_CONFIG_MUTEX0_EN + n*0x20;
}

static inline u32 DISP_REG_CONFIG_MUTEX(int n)
{
	return DISP_REG_CONFIG_MUTEX0 + n*0x20;
}

static inline u32 DISP_REG_CONFIG_MUTEX_RST(int n)
{
	return DISP_REG_CONFIG_MUTEX0_RST + n*0x20;
}

static inline u32 DISP_REG_CONFIG_MUTEX_MOD(int n)
{
	return DISP_REG_CONFIG_MUTEX0_MOD + n*0x20;
}

static inline u32 DISP_REG_CONFIG_MUTEX_SOF(int n)
{
	return DISP_REG_CONFIG_MUTEX0_SOF + n*0x20;
}

/* OVL */
enum {
	DISP_REG_OVL_STA                  =  0x0000,
	DISP_REG_OVL_INTEN                =  0x0004,
	DISP_REG_OVL_INTSTA               =  0x0008,
	DISP_REG_OVL_EN                   =  0x000C,
	DISP_REG_OVL_TRIG                 =  0x0010,
	DISP_REG_OVL_RST                  =  0x0014,
	DISP_REG_OVL_ROI_SIZE             =  0x0020,
	DISP_REG_OVL_DATAPATH_CON         =  0x0024,
	DISP_REG_OVL_ROI_BGCLR            =  0x0028,
	DISP_REG_OVL_SRC_CON              =  0x002C,
	DISP_REG_OVL_L0_CON               =  0x0030,
	DISP_REG_OVL_L0_SRCKEY            =  0x0034,
	DISP_REG_OVL_L0_SRC_SIZE          =  0x0038,
	DISP_REG_OVL_L0_OFFSET            =  0x003C,
	DISP_REG_OVL_L0_ADDR              =  0x0f40,
	DISP_REG_OVL_L0_PITCH             =  0x0044,
	DISP_REG_OVL_L1_CON               =  0x0050,
	DISP_REG_OVL_L1_SRCKEY            =  0x0054,
	DISP_REG_OVL_L1_SRC_SIZE          =  0x0058,
	DISP_REG_OVL_L1_OFFSET            =  0x005C,
	DISP_REG_OVL_L1_ADDR              =  0x0f60,
	DISP_REG_OVL_L1_PITCH             =  0x0064,
	DISP_REG_OVL_L2_CON               =  0x0070,
	DISP_REG_OVL_L2_SRCKEY            =  0x0074,
	DISP_REG_OVL_L2_SRC_SIZE          =  0x0078,
	DISP_REG_OVL_L2_OFFSET            =  0x007C,
	DISP_REG_OVL_L2_ADDR              =  0x0f80,
	DISP_REG_OVL_L2_PITCH             =  0x0084,
	DISP_REG_OVL_L3_CON               =  0x0090,
	DISP_REG_OVL_L3_SRCKEY            =  0x0094,
	DISP_REG_OVL_L3_SRC_SIZE          =  0x0098,
	DISP_REG_OVL_L3_OFFSET            =  0x009C,
	DISP_REG_OVL_L3_ADDR              =  0x0fA0,
	DISP_REG_OVL_L3_PITCH             =  0x00A4,
	DISP_REG_OVL_RDMA0_CTRL           =  0x00C0,
	DISP_REG_OVL_RDMA0_MEM_START_TRIG =  0x00C4,
	DISP_REG_OVL_RDMA0_MEM_GMC_SETTING =  0x00C8,
	DISP_REG_OVL_RDMA0_MEM_SLOW_CON    =  0x00CC,
	DISP_REG_OVL_RDMA0_FIFO_CTRL      =  0x00D0,
	DISP_REG_OVL_RDMA1_CTRL           =  0x00E0,
	DISP_REG_OVL_RDMA1_MEM_START_TRIG =  0x00E4,
	DISP_REG_OVL_RDMA1_MEM_GMC_SETTING =  0x00E8,
	DISP_REG_OVL_RDMA1_MEM_SLOW_CON   =  0x00EC,
	DISP_REG_OVL_RDMA1_FIFO_CTRL      =  0x00F0,
	DISP_REG_OVL_RDMA2_CTRL           =  0x0100,
	DISP_REG_OVL_RDMA2_MEM_START_TRIG =  0x0104,
	DISP_REG_OVL_RDMA2_MEM_GMC_SETTING =  0x0108,
	DISP_REG_OVL_RDMA2_MEM_SLOW_CON   =  0x010C,
	DISP_REG_OVL_RDMA2_FIFO_CTRL      =  0x0110,
	DISP_REG_OVL_RDMA3_CTRL           =  0x0120,
	DISP_REG_OVL_RDMA3_MEM_START_TRIG =  0x0124,
	DISP_REG_OVL_RDMA3_MEM_GMC_SETTING =  0x0128,
	DISP_REG_OVL_RDMA3_MEM_SLOW_CON   =  0x012C,
	DISP_REG_OVL_RDMA3_FIFO_CTRL      =  0x0130,
	DISP_REG_OVL_L0_Y2R_PARA_R0       =  0x0134,
	DISP_REG_OVL_L0_Y2R_PARA_R1       =  0x0138,
	DISP_REG_OVL_L0_Y2R_PARA_G0       =  0x013C,
	DISP_REG_OVL_L0_Y2R_PARA_G1       =  0x0140,
	DISP_REG_OVL_L0_Y2R_PARA_B0       =  0x0144,
	DISP_REG_OVL_L0_Y2R_PARA_B1       =  0x0148,
	DISP_REG_OVL_L0_Y2R_PARA_YUV_A_0  =  0x014C,
	DISP_REG_OVL_L0_Y2R_PARA_YUV_A_1  =  0x0150,
	DISP_REG_OVL_L0_Y2R_PARA_RGB_A_0  =  0x0154,
	DISP_REG_OVL_L0_Y2R_PARA_RGB_A_1  =  0x0158,
	DISP_REG_OVL_L1_Y2R_PARA_R0       =  0x015C,
	DISP_REG_OVL_L1_Y2R_PARA_R1       =  0x0160,
	DISP_REG_OVL_L1_Y2R_PARA_G0       =  0x0164,
	DISP_REG_OVL_L1_Y2R_PARA_G1       =  0x0168,
	DISP_REG_OVL_L1_Y2R_PARA_B0       =  0x016C,
	DISP_REG_OVL_L1_Y2R_PARA_B1       =  0x0170,
	DISP_REG_OVL_L1_Y2R_PARA_YUV_A_0  =  0x0174,
	DISP_REG_OVL_L1_Y2R_PARA_YUV_A_1  =  0x0178,
	DISP_REG_OVL_L1_Y2R_PARA_RGB_A_0  =  0x017C,
	DISP_REG_OVL_L1_Y2R_PARA_RGB_A_1  =  0x0180,
	DISP_REG_OVL_L2_Y2R_PARA_R0       =  0x0184,
	DISP_REG_OVL_L2_Y2R_PARA_R1       =  0x0188,
	DISP_REG_OVL_L2_Y2R_PARA_G0       =  0x018C,
	DISP_REG_OVL_L2_Y2R_PARA_G1       =  0x0190,
	DISP_REG_OVL_L2_Y2R_PARA_B0       =  0x0194,
	DISP_REG_OVL_L2_Y2R_PARA_B1       =  0x0198,
	DISP_REG_OVL_L2_Y2R_PARA_YUV_A_0  =  0x019C,
	DISP_REG_OVL_L2_Y2R_PARA_YUV_A_1  =  0x01A0,
	DISP_REG_OVL_L2_Y2R_PARA_RGB_A_0  =  0x01A4,
	DISP_REG_OVL_L2_Y2R_PARA_RGB_A_1  =  0x01A8,
	DISP_REG_OVL_L3_Y2R_PARA_R0       =  0x01AC,
	DISP_REG_OVL_L3_Y2R_PARA_R1       =  0x01B0,
	DISP_REG_OVL_L3_Y2R_PARA_G0       =  0x01B4,
	DISP_REG_OVL_L3_Y2R_PARA_G1       =  0x01B8,
	DISP_REG_OVL_L3_Y2R_PARA_B0       =  0x01BC,
	DISP_REG_OVL_L3_Y2R_PARA_B1       =  0x01C0,
	DISP_REG_OVL_L3_Y2R_PARA_YUV_A_0  =  0x01C4,
	DISP_REG_OVL_L3_Y2R_PARA_YUV_A_1  =  0x01C8,
	DISP_REG_OVL_L3_Y2R_PARA_RGB_A_0  =  0x01CC,
	DISP_REG_OVL_L3_Y2R_PARA_RGB_A_1  =  0x01D0,
	DISP_REG_OVL_DEBUG_MON_SEL        =  0x01D4,
	DISP_REG_OVL_RDMA0_MEM_GMC_SETTING2 = 0x01E0,
	DISP_REG_OVL_RDMA1_MEM_GMC_SETTING2 = 0x01E4,
	DISP_REG_OVL_RDMA2_MEM_GMC_SETTING2 = 0x01E8,
	DISP_REG_OVL_RDMA3_MEM_GMC_SETTING2 = 0x01EC,
	DISP_REG_OVL_DUMMY                  = 0x0200,
	DISP_REG_OVL_FLOW_CTRL_DBG          = 0x0240,
	DISP_REG_OVL_ADDCON_DBG             = 0x0244,
	DISP_REG_OVL_OUTMUX_DBG             = 0x0248,
	DISP_REG_OVL_RDMA0_DBG              = 0x024C,
	DISP_REG_OVL_RDMA1_DBG              = 0x0250,
	DISP_REG_OVL_RDMA2_DBG              = 0x0254,
	DISP_REG_OVL_RDMA3_DBG              = 0x0258
};


/* RDMA */
enum {
	DISP_REG_RDMA_INT_ENABLE        = 0x0000,
	DISP_REG_RDMA_INT_STATUS        = 0x0004,
	DISP_REG_RDMA_GLOBAL_CON        = 0x0010,
	DISP_REG_RDMA_SIZE_CON_0        = 0x0014,
	DISP_REG_RDMA_SIZE_CON_1        = 0x0018,
	DISP_REG_RDMA_TARGET_LINE       = 0x001C,
	DISP_REG_RDMA_MEM_CON           = 0x0024,
	DISP_REG_RDMA_MEM_START_ADDR    = 0x0028,
	DISP_REG_RDMA_MEM_SRC_PITCH     = 0x002C,
	DISP_REG_RDMA_MEM_GMC_SETTING_0 = 0x0030,
	DISP_REG_RDMA_MEM_SLOW_CON      = 0x0034,
	DISP_REG_RDMA_MEM_GMC_SETTING_1 = 0x0038,
	DISP_REG_RDMA_FIFO_CON          = 0x0040,
	DISP_REG_RDMA_CF_00             = 0x0054,
	DISP_REG_RDMA_CF_01             = 0x0058,
	DISP_REG_RDMA_CF_02             = 0x005C,
	DISP_REG_RDMA_CF_10             = 0x0060,
	DISP_REG_RDMA_CF_11             = 0x0064,
	DISP_REG_RDMA_CF_12             = 0x0068,
	DISP_REG_RDMA_CF_20             = 0x006C,
	DISP_REG_RDMA_CF_21             = 0x0070,
	DISP_REG_RDMA_CF_22             = 0x0074,
	DISP_REG_RDMA_CF_PRE_ADD0       = 0x0078,
	DISP_REG_RDMA_CF_PRE_ADD1       = 0x007C,
	DISP_REG_RDMA_CF_PRE_ADD2       = 0x0080,
	DISP_REG_RDMA_CF_POST_ADD0      = 0x0084,
	DISP_REG_RDMA_CF_POST_ADD1      = 0x0088,
	DISP_REG_RDMA_CF_POST_ADD2      = 0x008C,
	DISP_REG_RDMA_DUMMY             = 0x0090,
	DISP_REG_RDMA_DEBUG_OUT_SEL     = 0x0094
};

enum {
	RDMA_N_OFST = 0x1000
};

/* ROTDMA */
enum {
	DISP_REG_ROT_EN                   = 0x0,
	DISP_REG_ROT_RESET                = 0x0008,
	DISP_REG_ROT_INTERRUPT_ENABLE     = 0x0010,
	DISP_REG_ROT_INTERRUPT_STATUS     = 0x0018,
	DISP_REG_ROT_CON                  = 0x0020,
	DISP_REG_ROT_GMCIF_CON            = 0x0028,
	DISP_REG_ROT_SRC_CON              = 0x0030,
	DISP_REG_ROT_SRC_BASE_0           = 0x0040,
	DISP_REG_ROT_SRC_BASE_1           = 0x0048,
	DISP_REG_ROT_SRC_BASE_2           = 0x0050,
	DISP_REG_ROT_MF_BKGD_SIZE_IN_BYTE = 0x0060,
	DISP_REG_ROT_MF_SRC_SIZE          = 0x0070,
	DISP_REG_ROT_MF_CLIP_SIZE         = 0x0078,
	DISP_REG_ROT_MF_OFFSET_1          = 0x0080,
	DISP_REG_ROT_MF_PAR               = 0x0088,
	DISP_REG_ROT_SF_BKGD_SIZE_IN_BYTE = 0x0090,
	DISP_REG_ROT_SF_PAR       = 0x00B8,
	DISP_REG_ROT_MB_DEPTH     = 0x00C0,
	DISP_REG_ROT_MB_BASE      = 0x00C8,
	DISP_REG_ROT_MB_CON       = 0x00D0,
	DISP_REG_ROT_SB_DEPTH     = 0x00D8,
	DISP_REG_ROT_SB_BASE      = 0x00E0,
	DISP_REG_ROT_SB_CON       = 0x00E8,
	DISP_REG_ROT_VC1_RANGE    = 0x00F0,
	DISP_REG_ROT_TRANSFORM_0  = 0x0200,
	DISP_REG_ROT_TRANSFORM_1  = 0x0208,
	DISP_REG_ROT_TRANSFORM_2  = 0x0210,
	DISP_REG_ROT_TRANSFORM_3  = 0x0218,
	DISP_REG_ROT_TRANSFORM_4  = 0x0220,
	DISP_REG_ROT_TRANSFORM_5  = 0x0228,
	DISP_REG_ROT_TRANSFORM_6  = 0x0230,
	DISP_REG_ROT_TRANSFORM_7  = 0x0238,
	DISP_REG_ROT_RESV_DUMMY_0 = 0x0240,
	DISP_REG_ROT_CHKS_EXTR    = 0x0300,
	DISP_REG_ROT_CHKS_INTW    = 0x0308,
	DISP_REG_ROT_CHKS_INTR    = 0x0310,
	DISP_REG_ROT_CHKS_ROTO    = 0x0318,
	DISP_REG_ROT_CHKS_SRIY    = 0x0320,
	DISP_REG_ROT_CHKS_SRIU    = 0x0328,
	DISP_REG_ROT_CHKS_SRIV    = 0x0330,
	DISP_REG_ROT_CHKS_SROY    = 0x0338,
	DISP_REG_ROT_CHKS_SROU    = 0x0340,
	DISP_REG_ROT_CHKS_SROV    = 0x0348,
	DISP_REG_ROT_CHKS_VUPI    = 0x0350,
	DISP_REG_ROT_CHKS_VUPO    = 0x0358,
	DISP_REG_ROT_DEBUG_CON    = 0x0380,
	DISP_REG_ROT_MON_STA_0    = 0x0400,
	DISP_REG_ROT_MON_STA_1    = 0x0408,
	DISP_REG_ROT_MON_STA_2    = 0x0410,
	DISP_REG_ROT_MON_STA_3    = 0x0418,
	DISP_REG_ROT_MON_STA_4    = 0x0420,
	DISP_REG_ROT_MON_STA_5    = 0x0428,
	DISP_REG_ROT_MON_STA_6    = 0x0430,
	DISP_REG_ROT_MON_STA_7    = 0x0438,
	DISP_REG_ROT_MON_STA_8    = 0x0440,
	DISP_REG_ROT_MON_STA_9    = 0x0448,
	DISP_REG_ROT_MON_STA_10   = 0x0450,
	DISP_REG_ROT_MON_STA_11   = 0x0458,
	DISP_REG_ROT_MON_STA_12   = 0x0460,
	DISP_REG_ROT_MON_STA_13   = 0x0468,
	DISP_REG_ROT_MON_STA_14   = 0x0470,
	DISP_REG_ROT_MON_STA_15   = 0x0478,
	DISP_REG_ROT_MON_STA_16   = 0x0480,
	DISP_REG_ROT_MON_STA_17   = 0x0488,
	DISP_REG_ROT_MON_STA_18   = 0x0490,
	DISP_REG_ROT_MON_STA_19   = 0x0498,
	DISP_REG_ROT_MON_STA_20   = 0x04A0,
	DISP_REG_ROT_MON_STA_21   = 0x04A8,
	DISP_REG_ROT_MON_STA_22   = 0x04B0
};

/* SCL */
enum {
	DISP_REG_SCL_CTRL        = 0x0000,
	DISP_REG_SCL_INTEN       = 0x0004,
	DISP_REG_SCL_INTSTA      = 0x0008,
	DISP_REG_SCL_STATUS      = 0x000C,
	DISP_REG_SCL_CFG         = 0x0010,
	DISP_REG_SCL_INP_CHKSUM  = 0x0018,
	DISP_REG_SCL_OUTP_CHKSUM = 0x001C,
	DISP_REG_SCL_HRZ_CFG     = 0x0020,
	DISP_REG_SCL_HRZ_SIZE    = 0x0024,
	DISP_REG_SCL_HRZ_FACTOR  = 0x0028,
	DISP_REG_SCL_HRZ_OFFSET  = 0x002C,
	DISP_REG_SCL_VRZ_CFG     = 0x0040,
	DISP_REG_SCL_VRZ_SIZE    = 0x0044,
	DISP_REG_SCL_VRZ_FACTOR  = 0x0048,
	DISP_REG_SCL_VRZ_OFFSET  = 0x004C,
	DISP_REG_SCL_EXT_COEF    = 0x0060,
	DISP_REG_SCL_PEAK_CFG    = 0x0064
};

/* WDMA */
enum {
	DISP_REG_WDMA_INTEN         = 0x0000,
	DISP_REG_WDMA_INTSTA        = 0x0004,
	DISP_REG_WDMA_EN            = 0x0008,
	DISP_REG_WDMA_RST           = 0x000C,
	DISP_REG_WDMA_SMI_CON       = 0x0010,
	DISP_REG_WDMA_CFG           = 0x0014,
	DISP_REG_WDMA_SRC_SIZE      = 0x0018,
	DISP_REG_WDMA_CLIP_SIZE     = 0x001C,
	DISP_REG_WDMA_CLIP_COORD    = 0x0020,
	DISP_REG_WDMA_DST_ADDR      = 0x0024,
	DISP_REG_WDMA_DST_W_IN_BYTE = 0x0028,
	DISP_REG_WDMA_ALPHA         = 0x002C,
	DISP_REG_WDMA_BUF_ADDR      = 0x0030,
	DISP_REG_WDMA_STA           = 0x0034,
	DISP_REG_WDMA_BUF_CON1      = 0x0038,
	DISP_REG_WDMA_BUF_CON2      = 0x003C,
	DISP_REG_WDMA_C00           = 0x0040,
	DISP_REG_WDMA_C02           = 0x0044,
	DISP_REG_WDMA_C10           = 0x0048,
	DISP_REG_WDMA_C12           = 0x004C,
	DISP_REG_WDMA_C20           = 0x0050,
	DISP_REG_WDMA_C22           = 0x0054,
	DISP_REG_WDMA_PRE_ADD0      = 0x0058,
	DISP_REG_WDMA_PRE_ADD2      = 0x005C,
	DISP_REG_WDMA_POST_ADD0     = 0x0060,
	DISP_REG_WDMA_POST_ADD2     = 0x0064,
	DISP_REG_WDMA_DST_U_ADDR    = 0x0070,
	DISP_REG_WDMA_DST_V_ADDR    = 0x0074,
	DISP_REG_WDMA_DST_UV_PITCH  = 0x0078,
	DISP_REG_WDMA_DITHER_CON    = 0x0090,
	DISP_REG_WDMA_FLOW_CTRL_DBG = 0x00A0,
	DISP_REG_WDMA_EXEC_DBG      = 0x00A4,
	DISP_REG_WDMA_CLIP_DBG      = 0x00A8
};

/* CMDQ */
enum {
	DISP_INT_MUTEX_BIT_MASK = 0x00000002,
};

/* BLS */
enum {
	DISP_REG_BLS_EN             = 0x0000,
	DISP_REG_BLS_RST            = 0x0004,
	DISP_REG_BLS_BLS_SETTING    = 0x0008,
	DISP_REG_BLS_INTEN          = 0x0010,
	DISP_REG_BLS_INTSTA         = 0x0014,
	DISP_REG_BLS_SRC_SIZE       = 0x0018,
	DISP_REG_BLS_PWM_LUT_SEL    = 0x003C,
	DISP_REG_BLS_PWM_DUTY       = 0x0080,
	DISP_REG_BLS_PWM_DUTY_GAIN  = 0x0084,
	DISP_REG_BLS_PWM_CON        = 0x0090,
	DISP_REG_PWM_H_DURATION     = 0x0094,
	DISP_REG_PWM_L_DURATION     = 0x0098,
	DISP_REG_PWM_G_DURATION     = 0x009C,
	DISP_REG_PWM_SEND_DATA0     = 0x00A0,
	DISP_REG_PWM_SEND_DATA1     = 0x00A4,
	DISP_REG_PWM_WAVE_NUM       = 0x00A8,
	DISP_REG_PWM_DATA_WIDTH     = 0x00AC,
	DISP_REG_PWM_THRESH         = 0x00B0,
	DISP_REG_PWM_SEND_WAVENUM   = 0x00B4,
	DISP_REG_BLS_GAMMA_SETTING  = 0x0030,
	DISP_REG_BLS_GAMMA_BOUNDARY = 0x0034,
	DISP_REG_BLS_LUT_UPDATE     = 0x0038,
	DISP_REG_BLS_GAMMA_LUT0     = 0x0400,
	DISP_REG_BLS_IGAMMA_LUT0    = 0x0800,
	DISP_REG_BLS_PWM_LUT0       = 0x0C00,
	DISP_REG_BLS_DITHER0        = 0x0E00,
};

static inline u32 DISP_REG_BLS_GAMMA_LUT(int x)
{
	return  DISP_REG_BLS_GAMMA_LUT0  + (4 * (x));
}

static inline u32 DISP_REG_BLS_IGAMMA_LUT(int x)
{
	return DISP_REG_BLS_IGAMMA_LUT0 + (4 * (x));
}

static inline u32 DISP_REG_BLS_PWM_LUT(int x)
{
	return DISP_REG_BLS_PWM_LUT0 + (4 * (x));
}

static inline u32 DISP_REG_BLS_DITHER(int x)
{
	return DISP_REG_BLS_DITHER0  + (4 * (x));
}

/* BLS */
enum {
	DISP_REG_G2D_START     = 0x00,
	DISP_REG_G2D_MODE_CON  = 0x04,
	DISP_REG_G2D_RESET     = 0x08,
	DISP_REG_G2D_STATUS    = 0x0C,
	DISP_REG_G2D_IRQ       = 0x10,
	DISP_REG_G2D_ALP_CON   = 0x18,
	DISP_REG_G2D_W2M_CON   = 0x40,
	DISP_REG_G2D_W2M_ADDR  = 0x44,
	DISP_REG_G2D_W2M_PITCH = 0x48,
	DISP_REG_G2D_W2M_SIZE  = 0x50,
	DISP_REG_G2D_DST_CON   = 0x80,
	DISP_REG_G2D_DST_ADDR  = 0x84,
	DISP_REG_G2D_DST_PITCH = 0x88,
	DISP_REG_G2D_DST_COLOR = 0x94,
	DISP_REG_G2D_SRC_CON   = 0xC0,
	DISP_REG_G2D_SRC_ADDR  = 0xC4,
	DISP_REG_G2D_SRC_PITCH = 0xC8,
	DISP_REG_G2D_SRC_COLOR = 0xD4,
	DISP_REG_G2D_DI_MAT_0  = 0xD8,
	DISP_REG_G2D_DI_MAT_1  = 0xDC,
	DISP_REG_G2D_PMC       = 0xE0
};

enum {
	G2D_RESET_APB_RESET_BIT  = 0x0004,
	G2D_RESET_HARD_RESET_BIT = 0x0002,
	G2D_RESET_WARM_RESET_BIT = 0x0001
};

enum {
	G2D_STATUS_BUSY_BIT = 0x0001
};

enum {
	G2D_IRQ_STA_BIT = 0x0100,
	G2D_IRQ_ENABLE_BIT = 0x0001
};

/* DISP OD */
enum {
	DISP_OD_EN           = 0x000,
	DISP_OD_RESET        = 0x004,
	DISP_OD_INTEN        = 0x008,
	DISP_OD_INTS         = 0x00C,
	DISP_OD_STATUS       = 0x010,
	DISP_OD_CFG          = 0x020,
	DISP_OD_INPUT_COUNT  = 0x024,
	DISP_OD_OUTPUT_COUNT = 0x028,
	DISP_OD_CHKS_UM      = 0x02c,
	DISP_OD_SIZE         = 0x030,
	DISP_OD_HSYNC_WIDTH  = 0x040,
	DISP_OD_VSYNC_WIDTH  = 0x044,
	DISP_OD_MISC         = 0x048
};

/* UFO */
enum {
	DISP_REG_UFO_START = 0x000
};

/* COLOR */
enum {
	DISP_COLOR_CFG_MAIN = 0x400,
	DISP_COLOR_START = 0xC00
};

enum RDMA_MODE {
	RDMA_MODE_DIRECT_LINK = 0,
	RDMA_MODE_MEMORY = 1,
};

enum RDMA_OUTPUT_FORMAT {
	RDMA_OUTPUT_FORMAT_ARGB = 0,
	RDMA_OUTPUT_FORMAT_YUV444 = 1,
};

enum OVL_INPUT_FORMAT {
	OVL_INFMT_RGB565 = 0,
	OVL_INFMT_RGB888 = 1,
	OVL_INFMT_RGBA8888 = 2,
	OVL_INFMT_ARGB8888 = 3,
	OVL_INFMT_UYVY = 4,
	OVL_INFMT_YUYV = 5,
	OVL_INFMT_UNKNOWN = 16,

	OVL_COLOR_BASE = 30,
	OVL_INFMT_BGR565 = OVL_INFMT_RGB565 + OVL_COLOR_BASE,
	OVL_INFMT_BGR888 = OVL_INFMT_RGB888 + OVL_COLOR_BASE,
	OVL_INFMT_BGRA8888 = OVL_INFMT_RGBA8888 + OVL_COLOR_BASE,
	OVL_INFMT_ABGR8888 = OVL_INFMT_ARGB8888 + OVL_COLOR_BASE,
};

struct MTK_DISP_REGS {
	u32 regs;
	u32 ovl_regs;
	u32 rdma_regs;
	u32 color_regs;
	u32 aal_regs;
	u32 ufoe_regs;
	u32 mutex_regs;
	u32 dsi_reg;
	u32 od_regs;
	u32 dsi_ana_reg;
};

struct MTK_DISP_CLKS {
	struct clk *disp_mtcmos;
	struct clk *smi_common_ck;
	struct clk *smi_larb0_ck;
	struct clk *smi_larb4_ck;
	struct clk *mutex_disp_ck;
	struct clk *ovl0_disp_ck;
	struct clk *rdma0_disp_ck;
	struct clk *color0_disp_ck;
	struct clk *aal_disp_ck;
	struct clk *ufoe_disp_ck;
	struct clk *od_disp_ck;
};

void mtk_enable_vblank(u32 disp_base);
void mtk_disable_vblank(u32 disp_base);
void mtk_clear_vblank(u32 disp_base);
u32 mtk_get_vblank(u32 disp_base);
void ovl_dump_register(u32 disp_base);
void rdma_dump_register(u32 disp_base);
void disp_config_dump_register(u32 disp_base);

void main_disp_path_power_on(void);
void main_disp_path_power_off(void);
void main_disp_path_clear(void);

void disp_clock_clear(u32 drm_disp_base);

void mtk_ddp_init(void);
void mtk_ddp_mode_set(u32 fbbase, const struct edid *edid);

#endif
