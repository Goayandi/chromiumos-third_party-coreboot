/*
 * This file is part of the coreboot project.
 *
 * Copyright 2015 MediaTek Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 */

/*
 * REGISTER.H  Register map include file
 */

#ifndef _A60808_REGISTER_H_
#define _A60808_REGISTER_H_

/* DRAMC Chip */
#define fcA60808 0
#define fcMT6595 1
#define fcFOR_CHIP_ID fcMT6595

/* Do Write Leveling with all DQS together */
#define fcWL_ALL

/* MEMPLL */
/* seal ring or cts mode */
#define LEW_SIMULATION

/* DDR Type */
#define DDRTYPE_LPDDR3

/* support the different log level */
#define DRAMC_DEBUG_LOG_LEVEL

/* Feature option */
#define E2_MODIFICATION
#define fcNEW_PLL_PHASE_CALIB
#define fcNEW_PLL_GPPHASE_CALIB

#define DUAL_RANKS

#define ZQCS_ENABLE
#define EMI_OPTIMIZATION
#define LPDDR_MAX_DRIVE
#define NEW_TX_DELAY_For_WL
#define RX_DUTY_CALIBRATION

/* CLKTDN=1. Extend clk low duty. */
#define CLKTDN_ENABLE
#define WL_CLKADJUST
#define SPM_CONTROL_AFTERK
#define HW_GATING
#define DISABLE_DRVREF

#define DISABLE_PERBANK_REFRESH
#define REFTHD_ADJUST_0
#define MEMPLL_NEW_POWERON

#define DDR_1792

#if defined(DDR_1600)
#undef DDR_1792
#undef DDR_1866
#endif

#define FREQREG_SIZE    51
#define PLLGRPREG_SIZE	30

enum {
	LPDDR3_FREQ_LOW_MR2 = 0x00180002,		/* RL10 WL6 */
	LPDDR3_FREQ_HIGH_MR2 = 0x001C0002		/* RL14 WL8 */
};

#define DUAL_FREQ_LOW	533				/* 1066 Mbps */
#if defined(DDR_1600)
#define DUAL_FREQ_HIGH	800			/* 1333 <-> 1600 Mbps */
#elif defined(DDR_1780)
#define DUAL_FREQ_HIGH	890			/* 1333 <-> 1780 Mbps */
#elif defined(DDR_1792)
#define DUAL_FREQ_HIGH  896			/* 1333 <-> 1792 Mbps */
#elif defined(DDR_1066)
#define DUAL_FREQ_HIGH	533			/* 1333 <-> 1600 Mbps */
#elif defined(DDR_1333)
#define DUAL_FREQ_HIGH	666			/* 1333 <-> 1600 Mbps */
#endif

#ifdef DUAL_FREQ_K
#endif

#define CA_WR_ENABLE
#define CA_WL_BYTE2_FIX
#define SPM_MODIFY
#define ENABLE_DDYPHY_GATING
#define CKE_EXTEND_1T
#define FINETUNE_CENTER
#define CKE_CS_DLY_SETTING
#ifdef E2_MODIFICATION
#endif

#define TX_ADV_1T		/* For DLE advance. */

#define DRIVING_DS2_0	    7	/* DS[2:0] 7->6 */

#ifdef WL_CLKADJUST
#define CATRAINING_STEP	    0
#else
#ifdef fcMEMPLL_SEAL_RING
#define CATRAINING_STEP	    5
#else /* CTS */
#define CATRAINING_STEP	    0
#endif
#endif

/* Memory part */
#ifdef SLT
#define H9CKNNNDATMRPR
#endif

/* Test option */
#define DMA_BURST_LEN	7		/* 7:7x8. 3:4x8 */
#define SUSPEND_20140117
#define READ_COMPARE_TEST

#define MEM_27_GRID
#define DMA_ERROR_DISPLAY
#define DMA_ERROR_STOP
#ifndef SLT
#define COMBO_MCP
#define DISCRETE_DDR_MDL_SEARCH
#endif

/**************************  *********************/
#if fcFOR_CHIP_ID == fcMT6595
#define CH_INFO 30
#define CHA_DRAMCAO_BASE	((uintptr_t)0x10004000)
#define CHA_DDRPHY_BASE		((uintptr_t)0x1000F000)
#define CHA_DRAMCNAO_BASE	((uintptr_t)0x1020E000)
#define CHB_DRAMCAO_BASE	((uintptr_t)0x10011000)
#define CHB_DDRPHY_BASE		((uintptr_t)0x10012000)
#define CHB_DRAMCNAO_BASE	((uintptr_t)0x10213000)
#define DDR_BASE		((uintptr_t)0x40000000)
#define EMI_APB_BASE		((uintptr_t)0x10203000)

#if defined(H9CKNNNDATMRPR) /* Hynix 3GB */

#ifdef SINGLE_CHANNEL_ENABLE
/* Single channel. 15 bits row and 10 bits column. (channel A) */
#define	LPDDR3_EMI_CONA		0xA053A056
#else
/* Dual channels. 15 bits row and 10 bits column. */
#define	LPDDR3_EMI_CONA		0xA053A057
#endif
/* 6Gb per channel/rank */
#define	LPDDR3_EMI_CONH		0x33330000

#define	LPDDR3_ACTIM_000	0x77FD474B
#define	LPDDR3_GDDR3CTL1_0F4	0x11000000
#ifdef TCPDED_EXTEND
#define	LPDDR3_CONF1_004	0x40048403
#else
#define	LPDDR3_CONF1_004	0x00048403
#endif
#define	LPDDR3_DDR2CTL_07C	0x000053B1
#define	LPDDR3_MODE_REG_63	0x0000003F
#define	LPDDR3_MODE_REG_10	0x00FF000A
#define	LPDDR3_MODE_REG_1	0x00830001
#if  defined(DDR_1066) || defined(DDR_800)
#define	LPDDR3_MODE_REG_2	0x00170002		/* RL9 WL5 */
#elif defined(DDR_1333)
#define	LPDDR3_MODE_REG_2	0x00180002		/* RL10 WL6 */
#elif defined(DDR_1600)
#define	LPDDR3_MODE_REG_2	0x001A0002		/* RL12 WL6 */
#else
#ifdef WL11
#define	LPDDR3_MODE_REG_2	0x005C0002		/* RL14 WL11 */
#else
#define	LPDDR3_MODE_REG_2	0x001C0002		/* RL14 WL8 */
#endif
#endif
#define	LPDDR3_MODE_REG_3	0x00020003
#define	LPDDR3_TEST2_3_044	0xBFC40401
#ifdef tREFI_DIV4
#define LPDDR3_CONF2_008	0x0300001A
#define	LPDDR3_PD_CTRL_1DC	0xD1186142
#else
#ifdef tREFI_DIV2
#define LPDDR3_CONF2_008	0x03000036
#define	LPDDR3_PD_CTRL_1DC	0xD1326142
#else
#define LPDDR3_CONF2_008	0x0300006C
#define	LPDDR3_PD_CTRL_1DC	0xD1646142
#endif
#endif
#define	LPDDR3_ACTIM1_1E8	0x91001E59
#ifdef RELAXED_XRT
#define	LPDDR3_AC_TIME_05T_1f8	0x020004F1
#define	LPDDR3_RKCFG_110	0x002F77C1
#else
#ifdef RELAXED_XRTR2W
#define	LPDDR3_AC_TIME_05T_1f8	0x020004F1
#define	LPDDR3_RKCFG_110	0x002176C1
#else
#define	LPDDR3_AC_TIME_05T_1f8	0x000004F1
#define	LPDDR3_RKCFG_110	0x002156C1
#endif
#endif
#define	LPDDR3_TEST2_4_048	0x2701110D
#define	LPDDR3_MISCTL0_VAL_0fc	0x11000000

#elif defined(H9CKNNNCPTMRPR)  /* Hynix 4GB */

#ifdef SINGLE_CHANNEL_ENABLE
/* Single channel. 15 bits row and 10 bits column. (channel A) */
#define	LPDDR3_EMI_CONA		0xA053A056
#else
/* Dual channels. 15 bits row and 10 bits column. */
#define	LPDDR3_EMI_CONA		0xA053A057
#endif
#define	LPDDR3_EMI_CONH		0x00000000

#define LPDDR3_ACTIM_000	0x77FD474B
#define	LPDDR3_GDDR3CTL1_0F4	0x11000000
#ifdef TCPDED_EXTEND
#define	LPDDR3_CONF1_004	0x40048403
#else
#define	LPDDR3_CONF1_004	0x00048403
#endif
#define	LPDDR3_DDR2CTL_07C	0x000053B1
#define	LPDDR3_MODE_REG_63	0x0000003F
#define	LPDDR3_MODE_REG_10	0x00FF000A
#define	LPDDR3_MODE_REG_1	0x00830001
#if  defined(DDR_1066) || defined(DDR_800)
#define	LPDDR3_MODE_REG_2	0x00170002		/* RL9 WL5 */
#elif defined(DDR_1333)
#define	LPDDR3_MODE_REG_2	0x00180002		/* RL10 WL6 */
#elif defined(DDR_1600)
#define	LPDDR3_MODE_REG_2	0x001A0002		/* RL12 WL6 */
#else
#ifdef WL11
#define LPDDR3_MODE_REG_2	0x005C0002		/* RL14 WL11 */
#else
#define	LPDDR3_MODE_REG_2	0x001C0002		/* RL14 WL8 */
#endif
#endif
#define	LPDDR3_MODE_REG_3	0x00020003
#define	LPDDR3_TEST2_3_044	0xBFC40401
#ifdef tREFI_DIV4
#define LPDDR3_CONF2_008	0x0300001A
#define	LPDDR3_PD_CTRL_1DC	0xD1186142
#else
#ifdef tREFI_DIV2
#define LPDDR3_CONF2_008	0x03000036
#define	LPDDR3_PD_CTRL_1DC	0xD1326142
#else
#define LPDDR3_CONF2_008	0x0300006C
#define	LPDDR3_PD_CTRL_1DC	0xD1646142
#endif
#endif
#define	LPDDR3_ACTIM1_1E8	0x91001E59
#ifdef RELAXED_XRT
#define	LPDDR3_AC_TIME_05T_1f8	0x020004F1
#define	LPDDR3_RKCFG_110	0x002F77C1
#else
#ifdef RELAXED_XRTR2W
#define	LPDDR3_AC_TIME_05T_1f8	0x020004F1
#define	LPDDR3_RKCFG_110	0x002176C1
#else
#define	LPDDR3_AC_TIME_05T_1f8	0x000004F1
#define	LPDDR3_RKCFG_110	0x002156C1
#endif
#endif
#define	LPDDR3_TEST2_4_048	0x2701110D
#define	LPDDR3_MISCTL0_VAL_0fc	0x11000000

#else
/* EVB default LPDDR3 part. */
#ifdef SINGLE_CHANNEL_ENABLE
/* Single channel. 15 bits row and 10 bits column. (channel A) */
#define	LPDDR3_EMI_CONA		0x20102016
#else
/* Dual channels. 15 bits row and 10 bits column. */
#define	LPDDR3_EMI_CONA		0x20102017
#endif
#define	LPDDR3_ACTIM_000	0x77FD474B
#define	LPDDR3_GDDR3CTL1_0F4	0x11000000
#ifdef TCPDED_EXTEND
#define	LPDDR3_CONF1_004	0x40048403
#else
#define	LPDDR3_CONF1_004	0x00048403
#endif
#define	LPDDR3_DDR2CTL_07C	0x000053B1
#define	LPDDR3_MODE_REG_63	0x0000003F
#define	LPDDR3_MODE_REG_10	0x00FF000A
#define	LPDDR3_MODE_REG_1	0x00830001
#if  defined(DDR_1066) || defined(DDR_800)
#define	LPDDR3_MODE_REG_2	0x00170002		/* RL9 WL5 */
#elif defined(DDR_1333)
#define	LPDDR3_MODE_REG_2	0x00180002		/* RL10 WL6 */
#elif defined(DDR_1600)
#define	LPDDR3_MODE_REG_2	0x001A0002		/* RL12 WL6 */
#else
#ifdef WL11
#define LPDDR3_MODE_REG_2	0x005C0002		/* RL14 WL11 */
#else
#define	LPDDR3_MODE_REG_2	0x001C0002		/* RL14 WL8 */
#endif
#endif
#define	LPDDR3_MODE_REG_3	0x00020003
#define	LPDDR3_TEST2_3_044	0xBFC40401
#ifdef tREFI_DIV4
#define LPDDR3_CONF2_008	0x0300001A
#define	LPDDR3_PD_CTRL_1DC	0xD1186142
#else
#ifdef tREFI_DIV2
#define LPDDR3_CONF2_008	0x03000036
#define	LPDDR3_PD_CTRL_1DC	0xD1326142
#else
#define LPDDR3_CONF2_008	0x0300006C
#define	LPDDR3_PD_CTRL_1DC	0xD1646142
#endif
#endif
#define	LPDDR3_ACTIM1_1E8	0x91001E59
#ifdef RELAXED_XRT
#define	LPDDR3_AC_TIME_05T_1f8	0x020004F1
#define	LPDDR3_RKCFG_110	0x002F77C1
#else
#ifdef RELAXED_XRTR2W
#define	LPDDR3_AC_TIME_05T_1f8	0x020004F1
#define	LPDDR3_RKCFG_110	0x002176C1
#else
#define	LPDDR3_AC_TIME_05T_1f8	0x000004F1
#define	LPDDR3_RKCFG_110	0x002156C1
#endif
#endif
#define	LPDDR3_TEST2_4_048	0x2701110D
#define	LPDDR3_MISCTL0_VAL_0fc	0x11000000

#endif

#ifdef DUAL_FREQ_DIFF_ACTIMING

/* Low frequency. */
/* Now use 335x4=1340Mbps to calculate the AC timing fpr 1333Mbps. */
/* EVB default LPDDR3 part. */
enum {
	LPDDR3_ACTIM_000_LOW	    = 0x559B47D6,
	LPDDR3_GDDR3CTL1_0F4_LOW    = 0x11000000,
	LPDDR3_CONF1_004_LOW	    = 0x00048483,
	LPDDR3_DDR2CTL_07C_LOW	    = 0x000052B1,
	LPDDR3_TEST2_3_044_LOW	    = 0xBFCB0401,
	LPDDR3_CONF2_008_LOW	    = 0x03000050,
	LPDDR3_PD_CTRL_1DC_LOW	    = 0xD1644742,
	LPDDR3_ACTIM1_1E8_LOW	    = 0x91001330,
	LPDDR3_AC_TIME_05T_1f8_LOW  = 0x040012C7,
	LPDDR3_RKCFG_110_LOW	    = 0x002146C1,
	LPDDR3_TEST2_4_048_LOW	    = 0x1D01110D,
	LPDDR3_MISCTL0_VAL_0fc_LOW  = 0x11000000
};

#endif	/* DUAL_FREQ_DIFF_ACTIMING */

#ifdef SINGLE_CHANNEL_ENABLE
/* Single channel. 15 bits row and 10 bits column. */
#define PCDDR3_EMI_CONA		0x20102016
#else
/* Dual channels. 15 bits row and 10 bits column. */
#define PCDDR3_EMI_CONA		0x20102017
#endif

#endif

#define DRAMC_BASE_ADDRESS 0x20000000
#define REG_BANK_DRAMC_CHA 1
#define POS_BANK_NUM 12
#define XTALK_SSO_LEN	 3396

/* PLL registers */

/* DRAMC registers */
enum {
	DRAMC_REG_ACTIM0 = 0x000,
	POS_ACTIM0_BL2 = 15,
	DRAMC_REG_CONF1 = 0x004,
	POS_CONF1_BL4 = 10,
	POS_CONF1_SELFREF = 26,
	POS_CONF1_TESTLP = 27,
	DRAMC_REG_CONF2 = 0x008,
	POS_CONF2_TEST1 = 29,
	MASK_CONF2_TE12_ENABLE = 0xe0000000,
	DRAMC_REG_PADCTL1 = 0x00c,
	DRAMC_REG_PADCTL2 = 0x010,
	DRAMC_REG_PADCTL3 = 0x014,
	DRAMC_REG_DELDLY1 = 0x018,
	DRAMC_REG_01C	  = 0x01c,
	DRAMC_REG_DLLCONF = 0x028,
	DRAMC_REG_TEST2_0 = 0x038,   /* new on MT5399 */
	DRAMC_REG_TEST2_1 = 0x03C,
	DRAMC_REG_TEST2_2 = 0x040,
	DRAMC_REG_TEST2_3 = 0x044,
	POS_TEST2_3_ADVREFEN = 30,
	POS_TEST2_3_TESTAUDPAT = 7,
	/* bit0~3 */
	MASK_TEST2_3_TESTCNT = 0x0000000f,
	POS_TEST2_3_TESTCNT = 0,
	DRAMC_REG_TEST2_4 = 0x048,
	/* bit0~4 */
	MASK_TEST2_4_TESTAUDINC = 0x0000001f,
	POS_TEST2_4_TESTAUDINC = 0,
	/* bit8~12 */
	MASK_TEST2_4_TESTAUDINIT = 0x00001f00,
	POS_TEST2_4_TESTAUDINIT = 8,
	/* bit 14, 15 */
	POS_TEST2_4_TESTAUDBITINV = 14,
	POS_TEST2_4_TESTAUDMODE = 15,
	/* bit 16 */
	POS_TEST2_4_TESTXTALKPAT = 16,
	DRAMC_REG_DDR2CTL = 0x07c,
	MASK_DDR2CTL_DATLAT = 0x00000070,
	POS_DDR2CTL_DTALAT = 4,
	POS_DDR2CTL_WOEN = 3,
	DRAMC_REG_084 = 0x084,
	DRAMC_REG_MRS = 0x088,
	DRAMC_REG_CLK1DELAY = 0x08c,
	POS_CLK1DELAY_DQCMD = 3,
	DRAMC_REG_IOCTL = 0x090,
	DRAMC_REG_DQSIEN = 0x094,
	MASK_DQSIEN_R0DQS0IEN = 0x0000007f,
	MASK_DQSIEN_R0DQS1IEN = 0x00007f00,
	MASK_DQSIEN_R0DQS2IEN = 0x007f0000,
	MASK_DQSIEN_R0DQS3IEN = 0x7f000000,
	POS_DQSIEN_R0DQS0IEN = 0,
	POS_DQSIEN_R0DQS1IEN = 8,
	POS_DQSIEN_R0DQS2IEN = 16,
	POS_DQSIEN_R0DQS3IEN = 24,
	DRAMC_REG_R1DQSIEN   = 0x098,
	MASK_DQSIEN_R1DQS0IEN = 0x0000007f,
	MASK_DQSIEN_R1DQS1IEN = 0x00007f00,
	MASK_DQSIEN_R1DQS2IEN = 0x007f0000,
	MASK_DQSIEN_R1DQS3IEN = 0x7f000000,
	POS_DQSIEN_R1DQS0IEN = 0,
	POS_DQSIEN_R1DQS1IEN = 8,
	POS_DQSIEN_R1DQS2IEN = 16,
	POS_DQSIEN_R1DQS3IEN = 24,
	DRAMC_REG_IODRV4 = 0x0b0,
	MASK_IODRV4_DQDRVN_2 = 0x00000f00,
	MASK_IODRV4_DQDRVP_2 = 0x0000f000,
	MASK_IODRV4_CMDDRVN_2 = 0x0f000000,
	MASK_IODRV4_CMDDRVP_2 = 0xf0000000,
	POS_IODRV4_DQDRVN_2 = 8,
	POS_IODRV4_DQDRVP_2 = 12,
	POS_IODRV4_CMDDRVN_2 = 24,
	POS_IODRV4_CMDDRVP_2 = 28,
	DRAMC_REG_IODRV5 = 0x0b4,
	MASK_IODRV5_DQCDRVN = 0x00000f00,
	MASK_IODRV5_DQCDRVP = 0x0000f000,
	MASK_IODRV5_DQCDRVN_2 = 0x0f000000,
	MASK_IODRV5_DQCDRVP_2 = 0xf0000000,
	POS_IODRV5_DQCDRVN = 8,
	POS_IODRV5_DQCDRVP = 12,
	POS_IODRV5_DQCDRVN_2 = 24,
	POS_IODRV5_DQCDRVP_2 = 28,
	DRAMC_REG_DRVCTL0 = 0x0b8,
	MASK_DRVCTL0_DQDRVN = 0x00000f00,
	MASK_DRVCTL0_DQDRVP = 0x0000f000,
	MASK_DRVCTL0_DQSDRVN = 0x0f000000,
	MASK_DRVCTL0_DQSDRVP = 0xf0000000,
	POS_DRVCTL0_DQDRVN = 8,
	POS_DRVCTL0_DQDRVP = 12,
	POS_DRVCTL0_DQSDRVN = 24,
	POS_DRVCTL0_DQSDRVP = 28,
	DRAMC_REG_DRVCTL1 = 0x0bc,
	MASK_DRVCTL1_CMDDRVN = 0x00000f00,
	MASK_DRVCTL1_CMDDRVP = 0x0000f000,
	MASK_DRVCTL1_CLKDRVN = 0x0f000000,
	MASK_DRVCTL1_CLKDRVP = 0xf0000000,
	POS_DRVCTL1_CMDDRVN = 8,
	POS_DRVCTL1_CMDDRVP = 12,
	POS_DRVCTL1_CLKDRVN = 24,
	POS_DRVCTL1_CLKDRVP = 28,
	DRAMC_REG_MCKDLY = 0x0d8,
	/* bit 23 */
	POS_MCKDLY_FIXODT = 23,
	/* bit 12~15 */
	POS_MCKDLY_FIXDQIEN = 12,
	MASK_MCKDLY_FIXDQIEN = 0x0000f000,
	/* bit 10,11 */
	POS_MCKDLY_DQIENQKEND = 10,
	MASK_MCKDLY_DQIENQKEND = 0x00000c00,
	DRAMC_REG_DQSCTL0 = 0x0dc,
	DRAMC_REG_DQSCTL1 = 0x0e0,
	POS_DQSCTL1_DQSIENMODE = 28,
	MASK_DQSCTL1_DQSINCTL = 0x0f000000, /* for A60808, 4 bits totally */
	POS_DQSCTL1_DQSINCTL = 24,
	POS_DQSCTL1_DQS2CTL = 0,      /* [3:0] A60808: HW run-time DATLAT */
	MASK_DQSCTL1_DQS2CTL = 0x0000000f,
	DRAMC_REG_PADCTL4 = 0x0e4,
	MASK_PADCTL4_DATLAT3 = 0x00000010,
	POS_PADCTL4_DATLAT3 = 4,
	POS_PADCTL4_CKEFIXON = 2,
	DRAMC_REG_PHYCTL1 = 0x0f0,
	MASK_PHYCTL1_DATLAT4 = 0x02000000,
	POS_PHYCTL1_DATLAT4 = 25,
	POS_PHYCTL1_PHYRST = 28,
	DRAMC_REG_GDDR3CTL1 = 0x0f4,
	POS_GDDR3CTL1_DQMSWAP = 31,
	POS_GDDR3CTL1_RDATRST = 25,
	POS_GDDR3CTL1_BKSWAP = 20,
	DRAMC_REG_PADCTL7 = 0x0f8,
	DRAMC_REG_MISCTL0 = 0x0fc,
	DRAMC_REG_OCDK = 0x100,
	POS_OCDK_DRVREF = 24,
	DRAMC_REG_RKCFG = 0x110,
	POS_RKCFG_PBREF_DISBYRATE = 6,
	/* 32-bit channel it is 0, for 16-bit or asym DRAM it is 1 */
	POS_RKCFG_WDATKEY64 = 29,
	DRAMC_REG_CKPHDET = 0x114,
	DRAMC_REG_DQSCTL2 = 0x118,
	MASK_DQSCTL2_DQSINCTL = 0x0000000f,
	POS_DQSCTL2_DQSINCTL = 0,
	DRAMC_REG_DQ_DQS01_SEL = 0x120,
	DRAMC_REG_DQSGCTL = 0x124,
	MASK_DQSGCTL_R0DQSG_COARSE_DLY_COM0 = 0x00000003,
	MASK_DQSGCTL_R1DQSG_COARSE_DLY_COM0 = 0x0000000C,
	MASK_DQSGCTL_R0DQSG_COARSE_DLY_COM1 = 0x00000030,
	MASK_DQSGCTL_R1DQSG_COARSE_DLY_COM1 = 0x000000C0,
	POS_DQSGCTL_R0DQSG_COARSE_DLY_COM0 = 0,
	POS_DQSGCTL_R1DQSG_COARSE_DLY_COM0 = 2,
	POS_DQSGCTL_R0DQSG_COARSE_DLY_COM1 = 4,
	POS_DQSGCTL_R1DQSG_COARSE_DLY_COM1 = 6,
	POS_DQSGCTL_DQSGDUALP = 30,
	DRAMC_REG_CLKENCTL = 0x130,
	DRAMC_REG_WRLEV = 0x13c,
	/* bit 12 */
	POS_WRLEV_DQS_SEL = 12,
	MASK_WRLEV_DQS_SEL = 0x0000f000,
	/* bit 8 */
	POS_WRLEV_DQS_WLEV = 8,
	/* bit 1~4 */
	POS_WRLEV_DQS_Bx_G = 1,
	MASK_WRLEV_DQS_Bx_G = 0x0000001e,
	/* bit 0 */
	POS_WRLEV_WRITE_LEVEL_EN = 0,
	DRAMC_REG_PHYCLKDUTY = 0x148,
	POS_PHYCLKDUTY_CMDCLKP0DUTYSEL = 28,
	POS_PHYCLKDUTY_CMDCLKP0DUTYP = 18,
	MASK_PHYCLKDUTY_CMDCLKP0DUTYP = 0x000c0000,
	POS_PHYCLKDUTY_CMDCLKP0DUTYN = 16,
	MASK_PHYCLKDUTY_CMDCLKP0DUTYN = 0x00030000,
	DRAMC_REG_158 = 0x158,
	DRAMC_REG_ARBCTL0 = 0x168,
	DRAMC_REG_CMDDLY0 = 0x1a8,
	DRAMC_REG_CMDDLY1 = 0x1ac,
	DRAMC_REG_CMDDLY2 = 0x1b0,
	DRAMC_REG_CMDDLY3 = 0x1b4,
	DRAMC_REG_CMDDLY4 = 0x1b8,
	DRAMC_REG_DQSCAL0 = 0x1c0,
	POS_DQSCAL0_STBCALEN = 31,
	DRAMC_REG_IMPCAL = 0x1c8,
	POS_IMPCAL_IMPCALI_EN = 0,
	POS_IMPCAL_IMPCAL_HW = 1,
	POS_IMPCAL_IMP_CALI_ENN = 4,
	POS_IMPCAL_IMP_CALI_ENP = 5,
	POS_IMPCAL_IMPPDN = 6,
	POS_IMPCAL_IMPPDP = 7,
	POS_IMPCAL_IMPDRVP = 8,
	MASK_IMPCAL_IMPDRVP = 0x00000f00,
	POS_IMPCAL_IMPDRVN = 12,
	MASK_IMPCAL_IMPDRVN = 0x0000f000,
	DRAMC_REG_DMMonitor = 0x1d8,
	DRAMC_REG_DRAMC_PD_CTRL = 0x1dc,
	MASK_DRAMC_PD_CTRL_REFCNT_FR_CLK = 0x00ff0000,
	POS_DRAMC_PD_CTRL_REFCNT_FR_CLK = 16,
	POS_DRAMC_PD_CTRL_MIOCKCTRLOFF = 26,
	DRAMC_REG_LPDDR2 = 0x1e0,
	POS_LPDDR2_ADRDECEN = 31,
	POS_LPDDR2_SELO1ASO = 30,
	DRAMC_REG_SPCMD = 0x1e4,
	POS_SPCMD_MRWEN = 0,
	POS_SPCMD_DQSGCNTEN = 8,
	POS_SPCMD_DQSGCNTRST = 9,
	DRAMC_REG_ACTIM1 = 0x1e8,
	MASK_ACTIM1_REFRCNT = 0x00ff0000,
	POS_ACTIM1_REFRCNT = 16,
	DRAMC_REG_PERFCTL0 = 0x1ec,
	DRAMC_REG_RRRATE_CTL = 0x1f4,
	MASK_RRRATE_CTL_BIT0_SEL = 0x0000001f,
	MASK_RRRATE_CTL_BIT1_SEL = 0x00001f00,
	MASK_RRRATE_CTL_BIT2_SEL = 0x001f0000,
	MASK_RRRATE_CTL_BIT3_SEL = 0x1f000000,
	POS_RRRATE_CTL_BIT0_SEL = 0,
	POS_RRRATE_CTL_BIT1_SEL = 8,
	POS_RRRATE_CTL_BIT2_SEL = 16,
	POS_RRRATE_CTL_BIT3_SEL = 24,
	DRAMC_REG_LPDDR2_4 = 0x1f8,
	DRAMC_REG_MRR_CTL = 0x1fc,
	MASK_MRR_CTL_BIT4_SEL = 0x0000001f,
	MASK_MRR_CTL_BIT5_SEL = 0x00001f00,
	MASK_MRR_CTL_BIT6_SEL = 0x001f0000,
	MASK_MRR_CTL_BIT7_SEL = 0x1f000000,
	POS_MRR_CTL_BIT4_SEL = 0,
	POS_MRR_CTL_BIT5_SEL = 8,
	POS_MRR_CTL_BIT6_SEL = 16,
	POS_MRR_CTL_BIT7_SEL = 24,
	DRAMC_REG_DQODLY1 = 0x200,
	DRAMC_REG_DQODLY2 = 0x204,
	DRAMC_REG_DQODLY3 = 0x208,
	DRAMC_REG_DQODLY4 = 0x20c,
	DRAMC_REG_DQIDLY1 = 0x210,
	DRAMC_REG_DQIDLY2 = 0x214,
	DRAMC_REG_DQIDLY3 = 0x218,
	DRAMC_REG_DQIDLY4 = 0x21c,
	DRAMC_REG_DQIDLY5 = 0x220,
	DRAMC_REG_DQIDLY6 = 0x224,
	DRAMC_REG_DQIDLY7 = 0x228,
	DRAMC_REG_DQIDLY8 = 0x22c,
	DRAMC_REG_DMACON = 0x234,
	POS_DMACON_DMAEN = 0,
	POS_DMACON_DMAPUREWRITEEN = 1,
	POS_DMACON_DMAPUREREADEN = 2,
	POS_DMACON_DMABURSTLEN = 4,
	MASK_DMACON_DMABURSTLEN = 0x00000070,
	DRAMC_REG_DMASRCADDR = 0x238,
	DRAMC_REG_DMADSTADDR = 0x23c,
	DRAMC_REG_DMATRANSLEN = 0x240,
	POS_DMATRANSLEN_DMATRANSLEN = 0,
	MASK_DMATRANSLEN_DMATRANSLEN = 0x000fffff,
	DRAMC_REG_DMAPAT = 0x244,
	DRAMC_REG_DMAMON = 0x254,
	POS_DMAMON_DMASTATUS = 0,
	DRAMC_REG_DMACMPERR = 0x258,
	DRAMC_REG_R2R_page_hit_counter = 0x280,
	DRAMC_REG_STBENERR_R = 0x320,
	DRAMC_REG_STBENERR_F = 0x324,
	DRAMC_REG_TOGGLE_CNT = 0x32c,
	DRAMC_REG_DQS_ERR_CNT = 0x330,
	DRAMC_REG_DQ_ERR_CNT = 0x334,
	DRAMC_REG_SELPH = 0x344,
	DRAMC_REG_DCBLN = 0x348,
	POS_DCBLN_RSTBCNT_LATCH_EN = 11,
	POS_DCBLN_RX_MIOCK_JIT_EN = 2,
	POS_DCBLN_RX_EYE_SCAN_EN = 1,
	POS_DCBLN_REG_SW_RST = 0,
	DRAMC_REG_TOGGLE_CNT_2 = 0x360,
	DRAMC_REG_DQS_ERR_CNT_2 = 0x364,
	DRAMC_REG_DQ_ERR_CNT_2 = 0x368,
	DRAMC_REG_CMP_ERR = 0x370,
	DRAMC_REG_DQSDLY0 = 0x3a0,
	DRAMC_REG_SPCMDRESP = 0x3b8,
	POS_SPCMDRESP_SREF_STATE = 16,
	DRAMC_REG_DQSGNWCNT0 = 0x3c0,
	DRAMC_REG_DQSGNWCNT1 = 0x3c4,
	DRAMC_REG_DLLSTATUS0 = 0x3dc,
	POS_DLLSTATUS0_CMPOT = 31,
	POS_DLLSTATUS0_CMPOUTN = 30,
	DRAMC_REG_TESTRPT = 0x3fc,
	POS_TESTRPT_DM_CMP_CPT = 10,
	POS_TESTRPT_DM_CMP_ERR = 14,
	DRAMC_REG_SELPH1 = 0x400,
	DRAMC_REG_SELPH2 = 0x404,
	MASK_SELPH2_TXDLY_DQSGATE = 0x00007000,
	POS_SELPH2_TXDLY_DQSGATE = 12,
	MASK_SELPH2_TXDLY_DQSGATE_P1 = 0x00700000,
	POS_SELPH2_TXDLY_DQSGATE_P1 = 20,
	DRAMC_REG_SELPH3 = 0x408,
	DRAMC_REG_SELPH4 = 0x40C,
	DRAMC_REG_SELPH5 = 0x410,
	MASK_SELPH5_dly_DQSGATE = 0x00c00000,
	POS_SELPH5_dly_DQSGATE = 22,
	MASK_SELPH5_dly_DQSGATE_P1 = 0x03000000,
	POS_SELPH5_dly_DQSGATE_P1 = 24,
	DRAMC_REG_SELPH6 = 0x414,
	DRAMC_REG_SELPH6_1 = 0x418,
	MASK_SELPH6_1_TXDLY_R1DQSGATE = 0x00000070,
	POS_SELPH6_1_TXDLY_R1DQSGATE = 4,
	MASK_SELPH6_1_TXDLY_R1DQSGATE_P1 = 0x00000700,
	POS_SELPH6_1_TXDLY_R1DQSGATE_P1 = 8,
	MASK_SELPH6_1_dly_R1DQSGATE = 0x00000003,
	POS_SELPH6_1_dly_R1DQSGATE = 0,
	MASK_SELPH6_1_dly_R1DQSGATE_P1 = 0x0000000c,
	POS_SELPH6_1_dly_R1DQSGATE_P1 = 2,
	DRAMC_REG_SELPH7 = 0x41c,
	DRAMC_REG_SELPH8 = 0x420,
	DRAMC_REG_SELPH9 = 0x424,
	DRAMC_REG_SELPH10 = 0x428,
	DRAMC_REG_SELPH11 = 0x42c,
	DRAMC_REG_SELPH12 = 0x430,
	DRAMC_REG_SELPH13 = 0x434,
	DRAMC_REG_SELPH14 = 0x438,
	DRAMC_REG_SELPH15 = 0x43c,
	DRAMC_REG_SELPH16 = 0x440,
	DRAMC_REG_COM0_DLY_SEL_DGTED = 0x478,
	DRAMC_REG_COM0_DLY_SEL_DQS0 = 0x47C,
	DRAMC_REG_COM0_DLY_SEL_DQS1 = 0x480,
	DRAMC_REG_COM0_DLY_SEL_DQM0 = 0x484,
	DRAMC_REG_COM0_DLY_SEL_DQ2 = 0x494,
	DRAMC_REG_COM0_DLY_SEL_DQ3 = 0x498,
	DRAMC_REG_COM0_DLY_SEL_DQ4 = 0x49c,
	DRAMC_REG_COM0_DLY_SEL_DQ5 = 0x4a0,
	DRAMC_REG_COM0_DLY_SEL_DQ6 = 0x4a4,
	DRAMC_REG_COM0_DLY_SEL_DQ7 = 0x4a8,
	DRAMC_REG_COM1_DLY_SEL_DGTED = 0x4CC,
	DRAMC_REG_COM1_DLY_SEL_DQS0 = 0x4D0,
	DRAMC_REG_COM1_DLY_SEL_DQS1 = 0x4D4,
	DRAMC_REG_COM1_DLY_SEL_DQM0 = 0x4D8,
	DRAMC_REG_COM1_DLY_SEL_DQ0 = 0x4e0,
	DRAMC_REG_COM1_DLY_SEL_DQ2 = 0x4e8,
	DRAMC_REG_COM1_DLY_SEL_DQ3 = 0x4ec,
	DRAMC_REG_COM1_DLY_SEL_DQ4 = 0x4f0,
	DRAMC_REG_COM1_DLY_SEL_DQ5 = 0x4f4,
	DRAMC_REG_COM1_DLY_SEL_DQ6 = 0x4f8,
	DRAMC_REG_COM1_DLY_SEL_DQ7 = 0x4fc,
	DRAMC_REG_PH_EN = 0x520,
	DRAMC_REG_DLY_SEL_MCK_ANA = 0x524,
	DRAMC_REG_DLY_SEL_CLKGEN = 0x528,
	DRAMC_REG_DLY_SEL_CLKGEN2 = 0x52C
};

/* modify if end register address change */
#define A60808_REG_SIZE 0x400

#endif /* _MT5133_REGISTER_H_ */
